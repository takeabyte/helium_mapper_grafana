/** Property that offers a function that returns flux-sanitized value of an object.  */
export declare const FLUX_VALUE: unique symbol;
/**
 * A flux parameter can print its (sanitized) flux value.
 */
export interface FluxParameterLike {
    [FLUX_VALUE](): string;
}
/**
 * Represents a parameterized query.
 */
export interface ParameterizedQuery {
    /**
     * Returns flux query with sanitized parameters.
     */
    toString(): string;
}
/**
 * Creates a flux string literal.
 */
export declare function fluxString(value: any): FluxParameterLike;
/**
 * Sanitizes float value to avoid injections.
 * @param value - InfluxDB float literal
 * @returns sanitized float value
 * @throws Error if the the value cannot be sanitized
 */
export declare function sanitizeFloat(value: any): string;
/**
 * Creates a flux float literal.
 */
export declare function fluxFloat(value: any): FluxParameterLike;
/**
 * Creates a flux integer literal.
 */
export declare function fluxInteger(value: any): FluxParameterLike;
/**
 * Creates flux date-time literal.
 */
export declare function fluxDateTime(value: any): FluxParameterLike;
/**
 * Creates flux date-time literal.
 */
export declare function fluxDuration(value: any): FluxParameterLike;
/**
 * Creates flux regexp literal.
 */
export declare function fluxRegExp(value: any): FluxParameterLike;
/**
 * Creates flux boolean literal.
 */
export declare function fluxBool(value: any): FluxParameterLike;
/**
 * Assumes that the supplied value is flux expression or literal that does not need sanitizing.
 *
 * @param value - any value
 * @returns the supplied value as-is
 */
export declare function fluxExpression(value: any): FluxParameterLike;
/**
 * Escapes content of the supplied parameter so that it can be safely embedded into flux query.
 * @param value - parameter value
 * @returns sanitized flux value or an empty string if it cannot be converted
 */
export declare function toFluxValue(value: any): string;
/**
 * Flux is a tagged template that sanitizes supplied parameters
 * to avoid injection attacks in flux.
 */
export declare function flux(strings: TemplateStringsArray, ...values: any): ParameterizedQuery;
//# sourceMappingURL=flux.d.ts.map