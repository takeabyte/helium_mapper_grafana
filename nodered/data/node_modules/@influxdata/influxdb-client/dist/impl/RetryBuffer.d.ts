interface RetryItem {
    lines: string[];
    retryCount: number;
    expires: number;
    next?: RetryItem;
}
/**
 * Retries lines up to a limit of max buffer size.
 */
export default class RetryBuffer {
    private maxLines;
    private retryLines;
    first?: RetryItem;
    last?: RetryItem;
    size: number;
    nextRetryTime: number;
    closed: boolean;
    private _timeoutHandle;
    constructor(maxLines: number, retryLines: (lines: string[], retryCountdown: number, started: number) => Promise<void>);
    addLines(lines: string[], retryCount: number, delay: number, expires: number): void;
    removeLines(): RetryItem | undefined;
    scheduleRetry(delay: number): void;
    flush(): Promise<void>;
    close(): number;
}
export {};
//# sourceMappingURL=RetryBuffer.d.ts.map