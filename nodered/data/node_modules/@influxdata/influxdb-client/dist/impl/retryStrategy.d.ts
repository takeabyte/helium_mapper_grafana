import { RetryDelayStrategy } from '../errors';
import { RetryDelayStrategyOptions } from '../options';
/**
 * Applies a variant of exponential backoff with initial and max delay and a random
 * jitter delay. It also respects `retry delay` when specified together with an error.
 */
export declare class RetryStrategyImpl implements RetryDelayStrategy {
    options: RetryDelayStrategyOptions;
    currentDelay: number | undefined;
    constructor(options?: Partial<RetryDelayStrategyOptions>);
    nextDelay(error?: Error, failedAttempts?: number): number;
    success(): void;
}
/**
 * Creates a new instance of retry strategy.
 * @param options - retry options
 * @returns retry strategy implementation
 */
export declare function createRetryDelayStrategy(options?: Partial<RetryDelayStrategyOptions>): RetryDelayStrategy;
//# sourceMappingURL=retryStrategy.d.ts.map